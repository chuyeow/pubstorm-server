#!/bin/bash
#
# Builds and releases binaries to S3. This is meant to be run in a Docker
# container - see script/ci-build.

PUBLIC_BUCKET=${PUBLIC_BUCKET:="rise-server-staging"}
UPLOAD_S3=${UPLOAD_S3:="false"}
BUILD_DIR=/opt/bin
export GOPATH=/opt/
export GOBIN=/opt/bin
export PATH=/usr/local/go/bin:/opt/bin:$PATH
export GOROOT=/usr/local/go

upload_s3() {
  if [[ "$UPLOAD_S3" == "true" ]]; then
    s3cmd --access_key=$ACCESS_KEY --secret_key=$SECRET_KEY --acl-public \
      put $1 s3://$PUBLIC_BUCKET/$2
  fi
}

get_version() {
  app=$1
  version=$(cat $app/VERSION) # get version from version file
  sha=$(git rev-list --max-count=1 --abbrev-commit HEAD)

  echo "${version}-${sha}" # E.g. 1.0.1-deadbeef
}

hash_files() {
  f="$1"
  dest="$2"
  dir="$(dirname "$f")"
  base="$(basename "$f")"
  for hashAlgo in md5 sha256; do
    if command -v "${hashAlgo}sum" &> /dev/null; then
      (
      cd $dir
      "${hashAlgo}sum" "$base" > "$dest.$hashAlgo"
      )
    fi
  done
}

build() {
  cd /opt/src/github.com/nitrous-io/rise-server
  app=$1
  version=$(get_version $app)
  LDFLAGS="-X main.version $version"
  echo "Building $app $version"
  go install github.com/nitrous-io/rise-server/$app
  echo $version > $BUILD_DIR/$app-VERSION
}

build_jobs() {
  # Build all top-level subfolders in jobs/ folder.
  cd /opt/src/github.com/nitrous-io/rise-server
  version=$(get_version jobs)
  LDFLAGS="-s -w -X main.version=$version"

  cd /opt/src/github.com/nitrous-io/rise-server/jobs
  for d in *; do
    if [[ -d $d ]]; then
      echo "Building job: $d (version: $version)"
      go install github.com/nitrous-io/rise-server/jobs/$d
      echo $version > $BUILD_DIR/$d-VERSION
    fi
  done
}

bundle_binary() {
  cd /opt/src/github.com/nitrous-io/rise-server

  BINARY=$1
  shift
  VERSION=$(cat $BUILD_DIR/${BINARY}-VERSION)
  pkg=${BINARY}-${VERSION}.tar.gz
  latestpkg=${BINARY}-latest.tar.gz

  echo "BINARY_VERSION=${VERSION}" > jenkins.properties

  (
  cd $BUILD_DIR
  tar zvcf $pkg $BINARY $@

  hash_files $pkg $BINARY

  upload_s3 $pkg $pkg
  upload_s3 ${BINARY}.md5 ${BINARY}-${VERSION}.md5
  upload_s3 ${BINARY}.sha256 ${BINARY}-${VERSION}.sha256


  cp $pkg $latestpkg
  hash_files $latestpkg ${BINARY}-latest

  upload_s3 $latestpkg $latestpkg
  upload_s3 ${BINARY}-latest.md5 ${BINARY}-latest.md5
  upload_s3 ${BINARY}.sha256 ${BINARY}-latest.sha256
  )
}

copy_migrations() {
  cp -r /opt/src/github.com/nitrous-io/rise-server/apiserver/migrations /opt/bin
  chmod 777 /opt/bin/migrations
  chmod 666 /opt/bin/migrations/*
}

run_tests() {
  service postgresql start
  service rabbitmq-server start
  service docker start

  rabbitmqctl add_user admin password
  rabbitmqctl set_user_tags admin administrator
  rabbitmqctl set_permissions -p / admin ".*" ".*" ".*"
  rabbitmqctl add_vhost rise_development
  rabbitmqctl add_vhost rise_test
  rabbitmqctl set_permissions -p rise_development admin ".*" ".*" ".*"
  rabbitmqctl set_permissions -p rise_test admin ".*" ".*" ".*"

  cd /opt/src/github.com/nitrous-io/rise-server
  ./script/migrate up
  ./script/prepare-test-db
  ./script/test
}

echo "Running tests"
run_tests

echo "Creating binaries"
build apiserver
build edged
build deployer
build builder
build pushd

build_jobs

copy_migrations

# TODO: Perform release to s3
bundle_binary apiserver migrate migrations/*
bundle_binary edged
bundle_binary deployer
bundle_binary builder
bundle_binary pushd

bundle_binary acmerenewal
bundle_binary digestcron
bundle_binary purgedeploys
